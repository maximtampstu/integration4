import{s as n}from"./supabase-B2tzS42n.js";const l=async()=>{try{let{data:t,error:e}=await n.from("VotableThemes").select("*");if(e)console.log(" get contact err",e);else return t}catch(t){throw console.error("Error fetching notes:",t),t}},h=async()=>{try{let{data:t,error:e}=await n.from("ThemeVotes").select("*");if(e)console.log(" get contact err",e);else return t.length===0?[]:t}catch(t){throw console.error("Error fetching notes:",t),t}},m=async(t,e)=>{try{const{data:r,error:s}=await n.from("ThemeVotes").insert([{themeId:t,userEmail:e}]).select();return r[0]}catch(r){throw console.error("Error adding theme vote:",r),r}},d=async t=>{try{let{data:e,error:r}=await n.from("VotableThemes").select("*").eq("id",t);if(r)console.log(" get contact err",r);else return e.length===0?[]:e[0]}catch(e){throw console.error("Error fetching notes:",e),e}},g=async t=>{const e={};t.forEach(o=>{const a=o.themeId;e[a]=(e[a]||0)+1});let r=null,s=0;for(const o in e)e[o]>s&&(s=e[o],r=Number(o));return r},i=t=>{const e=t.length,r=t.reduce((s,o)=>(s[o.themeId]=(s[o.themeId]||0)+1,s),{});return Object.entries(r).map(([s,o])=>({themeId:Number(s),percentage:Math.round(o/e*100)})).sort((s,o)=>o.percentage-s.percentage)};export{l as a,m as b,g as c,d,i as e,h as g};
