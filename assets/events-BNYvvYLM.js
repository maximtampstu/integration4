import{s as c}from"./supabase-BcYPN25z.js";const u=async t=>{try{let{data:e,error:r}=await c.from("Events").select("*").eq("id",t);if(r)console.log(" get contact err",r);else return e[0]}catch(e){throw console.error("Error fetching notes:",e),e}},d=async()=>{try{let{data:t,error:e}=await c.from("Events").select("*").eq("current",!0);if(e)console.log(" get contact err",e);else return t[0]}catch(t){throw console.error("Error fetching notes:",t),t}},D=async()=>{try{let{data:t,error:e}=await c.from("Events").select("*").eq("current",!1);if(e)console.log(" get contact err",e);else return t.length===0?[]:t}catch(t){throw console.error("Error fetching notes:",t),t}},h=t=>{const e=new Date(t),r=new Date(e);r.setDate(e.getDate()+28);const n=String(r.getDate()).padStart(2,"0"),a=String(r.getMonth()+1).padStart(2,"0");return`${r.getFullYear()}-${a}-${n}`},y=t=>{const n=new Date(h(t))-new Date;if(n<0)return{days:0,hours:0,minutes:0};const a=Math.floor(n/(1e3*60*60*24)),s=Math.floor(n%(1e3*60*60*24)/(1e3*60*60)),o=Math.floor(n%(1e3*60*60)/(1e3*60));return{days:a,hours:s,minutes:o}},l=t=>["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][t-1]||"Invalid month",f=t=>{const[e,r,n]=t.split("-").map(Number);return`${n} ${l(r)}`},m=t=>{const[e,r,n]=t.split("-").map(Number);return`${n} ${l(r)} ${e}`},w=(t,e,r)=>{const n=new Date,a=new Date(t),s=new Date(a);s.setDate(a.getDate()+e);const o=new Date(a);return o.setDate(a.getDate()+r),n<s?`Phase starts in ${Math.ceil((s-n)/864e5)} day(s)`:n>=s&&n<=o?`Phase ends in ${Math.ceil((o-n)/864e5)} day(s)`:"Closed"};export{h as a,d as b,D as c,u as d,w as e,m as f,f as g,y as h};
