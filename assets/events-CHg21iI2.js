import{s as l}from"./supabase-B2tzS42n.js";const D=async t=>{try{let{data:e,error:o}=await l.from("Events").select("*").eq("id",t);if(o)console.log(" get contact err",o);else return e[0]}catch(e){throw console.error("Error fetching notes:",e),e}},f=async()=>{try{let{data:t,error:e}=await l.from("Events").select("*").eq("current",!0);if(e)console.log(" get contact err",e);else return t[0]}catch(t){throw console.error("Error fetching notes:",t),t}},g=async()=>{try{let{data:t,error:e}=await l.from("Events").select("*").eq("current",!1);if(e)console.log(" get contact err",e);else return t.length===0?[]:t}catch(t){throw console.error("Error fetching notes:",t),t}},h=t=>{const e=new Date(t),o=new Date(e);o.setDate(e.getDate()+28);const n=String(o.getDate()).padStart(2,"0"),s=String(o.getMonth()+1).padStart(2,"0");return`${o.getFullYear()}-${s}-${n}`},y=t=>{const n=new Date(h(t))-new Date;if(n<0)return{days:0,hours:0,minutes:0};const s=Math.floor(n/(1e3*60*60*24)),a=Math.floor(n%(1e3*60*60*24)/(1e3*60*60)),r=Math.floor(n%(1e3*60*60)/(1e3*60));return{days:s,hours:a,minutes:r}},d=t=>["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][t-1]||"Invalid month",w=t=>{const[e,o,n]=t.split("-").map(Number);return`${n} ${d(o)}`},m=t=>{const[e,o,n]=t.split("-").map(Number);return`${n} ${d(o)} ${e}`},M=(t,e,o)=>{const n=new Date,s=new Date(t),a=new Date(s);a.setDate(s.getDate()+e);const r=new Date(s);return r.setDate(s.getDate()+o),n<a?`Phase starts in ${Math.ceil((a-n)/864e5)} day(s)`:n>=a&&n<=r?`Phase ends in ${Math.ceil((r-n)/864e5)} day(s)`:"Closed"},E=t=>{const e=new Date,n=new Date(t)-e;if(n<=0)return{days:0,hours:0,minutes:0,seconds:0};const s=Math.floor(n/1e3),a=Math.floor(s/(60*60*24)),r=Math.floor(s%(60*60*24)/(60*60)),c=Math.floor(s%(60*60)/60),i=s%60;return{days:a,hours:r,minutes:c,seconds:i}},p=t=>{const e=new Date,o=new Date(t),n=e-o;return Math.floor(n/(1e3*60*60*24))+1};export{h as a,f as b,g as c,d,D as e,y as f,w as g,M as h,m as i,E as j,p as k};
